import { minify } from 'html-minifier'
import UglifyJS from 'uglify-js-export';
import fs from 'fs-extra';
import CleanCSS from 'clean-css';

const options = {
  includeAutoGeneratedTags: true,
  removeAttributeQuotes: true,
  removeComments: true,
  removeRedundantAttributes: true,
  removeScriptTypeAttributes: true,
  removeStyleLinkTypeAttributes: true,
  sortClassName: true,
  useShortDoctype: true,
  collapseWhitespace: true
};


/**
 * @type {import('@wcj/ejs-cli/lib/watch.mjs').Options}
 */
export default {
  watchOption: {

  },
  globalData: {
    helloworld: "Hello World! This is a global data"
  },
  data: {
    "template/about/index.ejs": "./about.json",
    "template/index.ejs": "./data.json",
    "template/home.ejs": {
      "name": "Hello World",
      "age": 362
    }
  },
  beforeSaveHTML: (html, output, filename) => {
    const minHTML = minify(html, options)
    return minHTML + "<!-- Hello -->"
  },
  afterCopyFile: (filePath, outputPath) => {
    if (filePath.endsWith('.js')) {
      const result = UglifyJS.minify(fs.readFileSync(outputPath, 'utf-8'))
      fs.writeFileSync(outputPath, result.code)
      console.log(`🐝 Compress js file success! ${outputPath}`)
    }
    if (filePath.endsWith('.css')) {
      const result = new CleanCSS().minify(fs.readFileSync(outputPath, 'utf-8'))
      fs.writeFileSync(outputPath, result.styles)
      console.log(`🐝 Compress css file success! ${outputPath}`)
    }
  }
};